{"version":3,"file":"TextInput-0ac86d21.js","sources":["../../src/components/Atoms/Input/TextInput/TextInput.tsx"],"sourcesContent":["import React, { useState, FocusEvent } from \"react\";\r\nimport styled from 'styled-components';\r\nimport TextField, { BaseTextFieldProps } from '@mui/material/TextField';\r\n\r\ninterface Props extends BaseTextFieldProps {\r\n  type: string,\r\n  variant?: \"filled\" | \"standard\" | \"outlined\" | undefined, \r\n  label: string,\r\n  inputProps?: {\r\n    style: {\r\n      color: string\r\n    },\r\n  }\r\n}\r\n\r\nconst InputStyled: React.FC<Props> = styled(TextField)<Props>`\r\n  border-radius: 4px!important;\r\n`;\r\n\r\n\r\nconst TextInput: React.FC<Props> = ({type, label}) => {\r\n    const [hasError, setHasError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    return <InputStyled \r\n              type={type} \r\n              variant=\"filled\" \r\n              label={label} \r\n              inputProps={{ style: { color: \"#0000008a\", } }} \r\n              error={hasError} \r\n              helperText={errorMessage} \r\n              fullWidth \r\n              onBlur={(e: FocusEvent<HTMLInputElement>) => {\r\n                if(e.target.value.length <= 0) \r\n                { setHasError(true); setErrorMessage('Value required') } \r\n                else { setHasError(false); setErrorMessage('') }\r\n            }}/>;\r\n  };\r\n\r\nexport default TextInput;"],"names":["InputStyled","styled","TextField","TextInput","type","label","hasError","setHasError","useState","errorMessage","setErrorMessage","jsx","e"],"mappings":"kMAeA,MAAAA,EAAAC,EAAAC,CAAA;AAAA;AAAA,EAKAC,EAAA,CAAA,CAAA,KAAAC,EAAA,MAAAC,KAAA,CACI,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EAEA,OAAAG,EAAA,IAAOX,EAAC,CAAA,KAAAI,EACE,QAAA,SACQ,MAAAC,EACR,WAAA,CAAA,MAAA,CAAA,MAAA,WAAA,CAAA,EAC6C,MAAAC,EACtC,WAAAG,EACK,UAAA,GACH,OAAAG,GAAA,CAEPA,EAAA,OAAA,MAAA,QAAA,GACEL,EAAA,EAAA,EAAmBG,EAAA,gBAAA,IACdH,EAAA,EAAA,EAAoBG,EAAA,EAAA,EAAoB,CACnD,CAAA,CACV"}